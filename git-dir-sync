#!/usr/bin/env python

import os
import subprocess

HOME_DIR = os.environ['HOME']
GIT_DIR = os.path.join(HOME_DIR, 'srv', 'git')
REPO_TUPLES = [
    ('android-spillage', False, ''),
    ('aur', True, ''),
    ('build', True, ''),
    ('clang', True, 'http://llvm.org/git/clang.git'),
    ('cmpl', True, ''),
    ('cnfggr', True, ''),
    ('django-gitolite', True, ''),
    ('django-ssh', True, ''),
    ('eyl-clang-analysis', False, ''),
    ('eyl-const-usage', False, ''),
    ('eyl-lang', True, ''),
    ('eyl-shell', True, ''),
    ('eyl-software', True, ''),
    ('home-config', True, ''),
    ('home-data', False, ''),
    ('home-journal', False, ''),
    ('home-password-store', False, ''),
    ('linux', True, 'git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git'),
    ('llvm', True, 'http://llvm.org/git/llvm.git'),
    ('rust', True, 'https://github.com/rust-lang/rust.git'),
    ('rust-wayland', True, ''),
    ('site-ecegit', True, ''),
    ('site-eyl', True, ''),
    ('site-eyl-blog', True, ''),
    ('site-eyolfson', True, ''),
    ('student-uwaterloo-cs642-1151', False, ''),
    ('teach-ece459-1141-a3', False, ''),
    ('teach-ece459-1141-media', False, ''),
    ('teach-ece459-1151-media', False, ''),
    ('teach-ece459-1151-media', False, ''),
    ('wayland', True, 'git://anongit.freedesktop.org/wayland/wayland'),
    ('weston', True, 'git://anongit.freedesktop.org/wayland/weston'),
]

def origin_url(repo_name):
    return 'git@eyl.io:jon/{}'.format(repo_name)

def ecgit_url(repo_name):
    return 'git@ecgit.uwaterloo.ca:jeyolfso/{}'.format(repo_name)

def github_url(repo_name):
    return 'git@github.com:eyolfson/{}'.format(repo_name)

for repo_name, repo_on_github, upstream_url in REPO_TUPLES:
    repo_dir = os.path.join(GIT_DIR, repo_name)
    if not os.path.isdir(repo_dir):
        subprocess.check_call(
            ['git', 'clone', origin_url(repo_name)],
            cwd=GIT_DIR
        )
    lines = subprocess.check_output(
        ['git', 'remote'],
        cwd=repo_dir,
        universal_newlines=True
    ).splitlines()
    remotes = set()
    for line in lines:
        remotes.add(line)
    if 'ecgit' not in remotes:
        print(repo_name, 'Adding ecgit remote')
        subprocess.check_call(
            ['git', 'remote', 'add', 'ecgit', ecgit_url(repo_name)],
            cwd=repo_dir
        )
    if repo_on_github and 'github' not in remotes:
        print(repo_name, 'Adding github remote')
        subprocess.check_call(
            ['git', 'remote', 'add', 'github', github_url(repo_name)],
            cwd=repo_dir
        )
    if upstream_url != '' and 'upstream' not in remotes:
        print(repo_name, 'Adding upstream remote')
        subprocess.check_call(
            ['git', 'remote', 'add', 'upstream', upstream_url],
            cwd=repo_dir
        )

try:
    git_abspath = os.path.join(GIT_DIR, 'home-password-store')
    home_abspath = os.path.join(HOME_DIR, '.password-store')
    os.symlink(git_abspath, home_abspath)
except FileExistsError:
    pass
if not os.path.samefile(git_abspath, home_abspath):
    warning_differs = '\x1b[33mWarning: {} differs\x1b[m'
    print(warning_differs.format(home_abspath))
